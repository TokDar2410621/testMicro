sudo apt-get update
sudo apt-get install python3-pip
pip3 install spidev


sudo raspi-config


import spidev
import time

# Initialiser SPI
spi = spidev.SpiDev()
spi.open(0, 0)  # Bus 0, Device 0
spi.max_speed_hz = 1350000

def read_adc(channel):
    """
    Lire une valeur du MCP3008
    channel : 0-7 (canal à lire)
    """
    if channel < 0 or channel > 7:
        return -1
    
    # Commande pour lire le canal
    adc = spi.xfer2([1, (8 + channel) << 4, 0])
    data = ((adc[1] & 3) << 8) + adc[2]
    return data

try:
    print("Lecture du microphone (Ctrl+C pour arrêter)")
    while True:
        # Lire le canal 0 (microphone)
        valeur = read_adc(0)
        
        # Convertir en voltage (0-3.3V)
        voltage = (valeur * 3.3) / 1023
        
        print(f"Valeur brute: {valeur:4d} | Voltage: {voltage:.2f}V", end='\r')
        
        time.sleep(0.1)
        
except KeyboardInterrupt:
    print("\nArrêt du programme")
    spi.close()

Code pour détecter un seuil sonore


import spidev
import time

spi = spidev.SpiDev()
spi.open(0, 0)
spi.max_speed_hz = 1350000

def read_adc(channel):
    adc = spi.xfer2([1, (8 + channel) << 4, 0])
    data = ((adc[1] & 3) << 8) + adc[2]
    return data

# Calibration : valeur au repos
print("Calibration... restez silencieux")
valeurs_repos = []
for i in range(100):
    valeurs_repos.append(read_adc(0))
    time.sleep(0.01)

valeur_repos = sum(valeurs_repos) // len(valeurs_repos)
seuil = 50  # Ajustez selon vos besoins

print(f"Valeur de repos: {valeur_repos}")
print(f"Seuil de détection: {seuil}")
print("Détection en cours...")

try:
    while True:
        valeur = read_adc(0)
        difference = abs(valeur - valeur_repos)
        
        if difference > seuil:
            print(f"Son détecté! Intensité: {difference}")
        
        time.sleep(0.01)
        
except KeyboardInterrupt:
    print("\nArrêt")
    spi.close()

